// lms - base
// ====================

// html {
//   overflow-y: scroll;
// }

html {
  font-family: $font-family-sans-serif;
  font-style: normal;
  line-height: 1em;
  background: theme-color("inverse");

}

body {
  font-family: $font-family-sans-serif;
  font-style: normal;
  font-size: $font-size-base;
  line-height: 1em;
  background: $body-bg;

}

// removing the outline on any element that we make programmatically focusable
[tabindex="-1"] {
  outline: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: $body-color;
  font: normal 1.2em/1.2em $serif;
  margin: 0;
}

h1 {
  color: $body-color;
  font: normal 2em/1.4em $font-family-sans-serif;
  margin-bottom: ($baseline*1.5);
  text-align: center;
}

h2 {
  color: $lighter-base-font-color;
  font: normal 1.2em/1.2em $serif;
  margin-bottom: ($baseline*0.75);
  -webkit-font-smoothing: antialiased;
}

p + h2,
ul + h2,
ol + h2 {
  margin-top: ($baseline*2);
}

p {
  color: inherit;
  margin: 0;
}

span {
  color: inherit;
  font: inherit;
}

/* Fix for CodeMirror: prevent top-level span from affecting deeply-embedded span in CodeMirror */
.CodeMirror span {
  font: inherit;
}

.text-center {
  text-align: center;
}

.text-dark-grey {
  color: $dark-gray1;
  font-size: 24px;
}

p + p,
ul + p,
ol + p {
  margin-top: $baseline;
}

p {
  a:not(.btn),
  a:visited:not(.btn) {
    color: $link-color;
    font: inherit;
    font-weight: inherit;
    text-decoration: none;

    @include transition(all 0.1s linear 0s);

    &:hover,
    &:focus {
      color: $link-hover;
      text-decoration: underline;
    }
  }
}

a:not(.btn),
a:visited:not(.btn) {
  color: $link-color;
  font: inherit;
  text-decoration: none;

  @include transition(all 0.1s linear 0s);

  &:hover,
  &:focus {
    color: $link-hover;
    text-decoration: underline;
  }

  &:disabled,
  &.is-disabled,
  &.disabled {
    @extend %ui-disabled;

    opacity: 0.5;
    cursor: not-allowed;
  }
}

.content-wrapper {
  margin: $baseline auto 0 auto;
  max-width: map-get($container-max-widths, xl);
  padding: 0 0 $baseline/2;

  @include media-breakpoint-up(md) {
    padding: 0 $baseline $baseline/2;
  }

  @media print {
    padding-bottom: 0;
  }
}

.container {
  @include clearfix();

  box-sizing: border-box;

  @include media-breakpoint-up(md) {
    margin: 0 auto;
    padding: ($baseline*2) 0;
    max-width: grid-width(12);
    min-width: 760px;
    width: flex-grid(12);
  }
}

.no-min-scale {
  min-width: 0 !important;
}

span.edx {
  text-transform: none;
  font: inherit;
}

.static-container {
  @include clearfix();

  margin: 0 auto;
  max-width: map-get($container-max-widths, xl);
  padding: ($baseline*3) 0 ($baseline*6);
  width: flex-grid(12);

  .inner-wrapper {
    margin: 0 auto;
    width: flex-grid(10);
  }

  ol,
  ul {
    list-style: disc;

    li {
      color: $body-color;
      font: normal 1em/1.4em $serif;
      margin: 0;
    }
  }

  h1 {
    margin-bottom: ($baseline*1.5);
  }

  h1 + hr {
    margin-bottom: ($baseline*3);
  }

  p + h2,
  ul + h2,
  ol + h2 {
    margin-top: ($baseline*2);
  }

  ul + p,
  ol + p {
    margin-top: $baseline;
  }
}

.loading-animation {
  @include animation(fa-spin 2s infinite linear);

  text-align: center;
  width: 100%;
}

mark {
  padding: 0 3px;
  border-radius: 2px;
  background-color: #f7e9a8;
  color: #333;
}

.ie-banner {
  display: none;
  max-width: map-get($container-max-widths, xl);
  min-width: 720px;
  margin: auto;
  border-radius: 0 0 3px 3px;
  background: #f4f4e0;
  color: #3c3c3c;
  padding: ($baseline/4) $baseline 8px;
  font-size: 13px;
  text-align: center;

  strong {
    font-weight: 700;
  }
}

// ====================

// UI - disabled state
.is-disabled {
  @extend %ui-disabled;
}

// UI - is hidden
.is-hidden {
  display: none;
}

// UI - is deprecated
.is-deprecated {
  @extend %ui-deprecated;
}

// UI - semantically hide text
.sr,
.sr-only {
  @extend %text-sr;
  @extend %a11y-ensure-contrast;
}

// UI - skipnav
.nav-skip,
.transcript-skip {
  @extend %ui-print-excluded;

  display: inline-block;
  position: absolute;
  left: 0;
  top: -($baseline*30);
  overflow: hidden;
  background: $white;
  border-bottom: 1px solid $border-color-4;
  padding: ($baseline*0.75) 0;

  &:focus,
  &:active {
    @include left(45%);
    @include margin-left(-1 * $baseline * 1.5);

    position: absolute;
    top: $baseline/4;
    width: 10%;
    height: auto;
    background-color: black;
    margin: 0;
    opacity: 0.8;
    color: white !important;
    text-decoration: none !important;
    outline: none;
    text-align: center;


    // Responsive styling for mobile
    @include media-breakpoint-down(md) {
      @include left(40%);

      width: 20%;
    }
  }
}
